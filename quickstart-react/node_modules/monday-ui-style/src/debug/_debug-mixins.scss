// DEBUG: MIXINS
@use "sass:string";

// # Debug compare values
// This Mixin enable map value compate
// @arguments: $prod, $dev,$white-list,$scope(optional)
// - Logic:
// -- if both maps has a key check key value.
// --- if value is the same, prompt  ✅  pass with $key name.
// --- if value is not the same and is whit listed prompt white list message
// --- else if prompt ❌ fail with $key name and values
// -- if $prod has key, prompt missing output message

@mixin debug-compare-values(
  $prod,
  $dev,
  $custom-props-values,
  $custom-props-converted,
  $white-list,
  $reference-key-map,
  $title:null,
  $scope:"basic theme"
) {
  @debug "\a ⚪  #{to-upper-case($scope)} THEME #{to-upper-case($title)}  ⚪    ";
  $i: 0;
  $i-key: 0;
  $num-pass: 0;
  $num-custom-properties: 0;
  $num-custom-properties-converted: 0;
  $num-custom-properties-converted-fail: 0;
  $num-white-list: 0;
  $num-fail: 0;
  $num-reference-missing: 0;
  $num-missing: 0;

  @debug "🔷 Validating keys  against referance map. 🔷";
  @each $key, $value in $reference-key-map {
    $i-key: $i-key + 1;
    @if map-has-key($reference-key-map, $key) and not map-has-key($prod,$key) {
      $num-reference-missing: $num-reference-missing + 1;
      @debug "[#{$i-key}] 🔶 --#{$key} missing from new output when checked prod against boilerplate";
    } @else {
      @if $debug-show-pass {
        @debug "[#{$i-key}] ✅ --#{$key} is cool";
      }
    }
  }

  @if $num-reference-missing == 0 {
    @debug "💚💚💚 All Keys for #{to-upper-case($scope)} are validated";
  }

  @debug "🔷 Validating prod key and values vs dev ... 🔷";
  @each $key, $value in $prod {
    $i: $i + 1;
    @if map-has-key($prod, $key) and map-has-key($dev,$key) {
      // Key match
      @if #{$value} == #{map-get($dev,$key)} {
        $num-pass: $num-pass + 1;
        @if $debug-show-pass {
          @debug "[#{$i}] ✅ PASS --#{$key} ";
        }
      } @else if map-has-key($custom-props-values, $key) {
        @if #{map-get($custom-props-values,$key)} == $key {
          @debug "[#{$i}] 🟩 FALSE FAIL ❕❕ CUSTOM PROPERTY REFERANCE: \a --#{$key}: #{$value } == #{map-get($custom-props-values,$key)} ==> Referance value ==  #{map-get($dev,$key)} ";
          $num-custom-properties: $num-custom-properties + 1;
        }
      } @else if map-has-key($custom-props-converted, $key) {
        @if #{map-get($custom-props-converted,$key)} == #{map-get($dev,$key)} {
          $num-custom-properties-converted: $num-custom-properties-converted + 1;
          @if $debug-show-converted {
            @debug "[#{$i}] 🟩 FALSE FAIL ❕❕ CUSTOM PROPERTY CONVERTED: \a --#{$key}: #{$value } == #{map-get($dev,$key)} ==> Converted value ==  #{map-get($custom-props-converted,$key)} ";
          }
        } @else {
          $num-custom-properties-converted-fail: $num-custom-properties-converted-fail + 1;
          @if $debug-show-converted-fail {
            @debug "[#{$i}] ❌ FAIL, --#{$key},#{map-get($prod,$key)} , ⭕ #{map-get($custom-props-converted,$key)} listed value in var to value map does not match";
          }
        }
      } @else if map-has-key($white-list, $key) {
        @debug "[#{$i}] ⬜ FALSE FAIL ,[WHITE LISTED] --#{$key} #{$value} changed to  #{map-get($white-list,$key)}";
        $num-white-list: $num-white-list + 1;
      } @else {
        @warn "[#{$i}] ❌ FAIL, --#{$key},#{map-get($prod,$key)} , ⭕ #{map-get($dev,$key)} ";
        $num-fail: $num-fail + 1;
      }
    } @else {
      // missing key
      $num-missing: $num-missing + 1;
      @debug "[#{$i}] 🔶 fix me, --#{$key} missing from new output when checked prod against dev";
    }
  }

  @if $num-pass == $i {
    @debug "💚💚💚 Amazing all values for #{to-upper-case($scope)} verified \a Total: #{$i} ✅ Pass";
  } @else {
    @debug "\a 🟦 TESTS RESULTS FOR #{to-upper-case($scope)}  #{to-upper-case($title)} ARE:\a Total: #{$i} ✅ Pass #{$num-pass} ❌ Fails #{$num-fail} 🟩 Custom properties #{$num-custom-properties} 🟩 Converted custom properties #{$num-custom-properties-converted} ⭕ Converted custom properties failed #{$num-custom-properties-converted-fail}  🟨️️️ White list #{$num-white-list} 🔶 Missing Aginast boilerplate #{$num-reference-missing}  🔶 Missing #{$num-missing}";
  }
}

// Debug vibe token
// This mixin validates if a token is a Vibe Registration or Key
// @arguments: a single item or a list of Custom properties.
// @argument must be a custom property, e.g: --red
// Output: validation or error message
@mixin debug-verify-vibe-tokens($keys...) {
  $i: 0;
  $num-pass: 0;
  $num-fail: 0;
  @debug "🔷 Validating Vibe Tokens ... 🔷";
  @each $key in $keys {
    $key: string.slice($key, $start-at: 3);
    $i: $i + 1;
    @if map-has-key($reference-vibe-keys-map,$key) == true {
      $num-pass: $num-pass + 1;
      @debug "#{[$i]} ✅ #{$key} is a Vibe key";
    } @else {
      $num-fail: $num-fail + 1;
      @debug "#{[$i]} ❌ #{$key} is not in Vibe";
    }
  }
  @debug "Validating Vibe key results: ✅ #{$num-pass} passed , #{$num-fail} failed"
}