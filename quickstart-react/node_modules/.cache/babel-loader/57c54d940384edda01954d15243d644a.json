{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {\n      ar.push(r.value);\n    }\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nvar __spreadArray = this && this.__spreadArray || function (to, from) {\n  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) {\n    to[j] = from[i];\n  }\n\n  return to;\n};\n\nimport * as React from 'react';\nimport convert from 'react-from-dom';\nimport { STATUS, canUseDOM, isSupportedEnvironment, randomString, removeProperties } from './helpers';\nexport var cacheStore = Object.create(null);\n\nvar InlineSVG =\n/** @class */\nfunction (_super) {\n  __extends(InlineSVG, _super);\n\n  function InlineSVG(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.isActive = false;\n\n    _this.handleCacheQueue = function (content) {\n      /* istanbul ignore else */\n      if (typeof content === 'string') {\n        _this.handleLoad(content);\n\n        return;\n      }\n\n      _this.handleError(content);\n    };\n\n    _this.handleLoad = function (content) {\n      /* istanbul ignore else */\n      if (_this.isActive) {\n        _this.setState({\n          content: content,\n          status: STATUS.LOADED\n        }, _this.getElement);\n      }\n    };\n\n    _this.handleError = function (error) {\n      var onError = _this.props.onError;\n      var status = error.message === 'Browser does not support SVG' ? STATUS.UNSUPPORTED : STATUS.FAILED;\n      /* istanbul ignore else */\n\n      if (_this.isActive) {\n        _this.setState({\n          status: status\n        }, function () {\n          /* istanbul ignore else */\n          if (typeof onError === 'function') {\n            onError(error);\n          }\n        });\n      }\n    };\n\n    _this.request = function () {\n      var _a = _this.props,\n          cacheRequests = _a.cacheRequests,\n          fetchOptions = _a.fetchOptions,\n          src = _a.src;\n\n      try {\n        if (cacheRequests) {\n          cacheStore[src] = {\n            content: '',\n            status: STATUS.LOADING,\n            queue: []\n          };\n        }\n\n        return fetch(src, fetchOptions).then(function (response) {\n          var contentType = response.headers.get('content-type');\n\n          var _a = __read((contentType || '').split(/ ?; ?/), 1),\n              fileType = _a[0];\n\n          if (response.status > 299) {\n            throw new Error('Not found');\n          }\n\n          if (!['image/svg+xml', 'text/plain'].some(function (d) {\n            return fileType.indexOf(d) >= 0;\n          })) {\n            throw new Error(\"Content type isn't valid: \" + fileType);\n          }\n\n          return response.text();\n        }).then(function (content) {\n          var currentSrc = _this.props.src; // the current src don't match the previous one, skipping...\n\n          if (src !== currentSrc) {\n            return;\n          }\n\n          _this.handleLoad(content);\n          /* istanbul ignore else */\n\n\n          if (cacheRequests) {\n            var cache = cacheStore[src];\n            /* istanbul ignore else */\n\n            if (cache) {\n              cache.content = content;\n              cache.status = STATUS.LOADED;\n              cache.queue = cache.queue.filter(function (cb) {\n                cb(content);\n                return false;\n              });\n            }\n          }\n        }).catch(function (error) {\n          _this.handleError(error);\n          /* istanbul ignore else */\n\n\n          if (cacheRequests) {\n            var cache = cacheStore[src];\n            /* istanbul ignore else */\n\n            if (cache) {\n              cache.queue.forEach(function (cb) {\n                cb(error);\n              });\n              delete cacheStore[src];\n            }\n          }\n        });\n      } catch (error) {\n        return _this.handleError(new Error(error.message));\n      }\n    };\n\n    _this.state = {\n      content: '',\n      element: null,\n      hasCache: !!props.cacheRequests && !!cacheStore[props.src],\n      status: STATUS.PENDING\n    };\n    _this.hash = props.uniqueHash || randomString(8);\n    return _this;\n  }\n\n  InlineSVG.prototype.componentDidMount = function () {\n    this.isActive = true;\n\n    if (!canUseDOM()) {\n      return;\n    }\n\n    var status = this.state.status;\n    var src = this.props.src;\n\n    try {\n      /* istanbul ignore else */\n      if (status === STATUS.PENDING) {\n        /* istanbul ignore else */\n        if (!isSupportedEnvironment()) {\n          throw new Error('Browser does not support SVG');\n        }\n        /* istanbul ignore else */\n\n\n        if (!src) {\n          throw new Error('Missing src');\n        }\n\n        this.load();\n      }\n    } catch (error) {\n      this.handleError(error);\n    }\n  };\n\n  InlineSVG.prototype.componentDidUpdate = function (prevProps, prevState) {\n    if (!canUseDOM()) {\n      return;\n    }\n\n    var _a = this.state,\n        hasCache = _a.hasCache,\n        status = _a.status;\n    var _b = this.props,\n        onLoad = _b.onLoad,\n        src = _b.src;\n\n    if (prevState.status !== STATUS.READY && status === STATUS.READY) {\n      /* istanbul ignore else */\n      if (onLoad) {\n        onLoad(src, hasCache);\n      }\n    }\n\n    if (prevProps.src !== src) {\n      if (!src) {\n        this.handleError(new Error('Missing src'));\n        return;\n      }\n\n      this.load();\n    }\n  };\n\n  InlineSVG.prototype.componentWillUnmount = function () {\n    this.isActive = false;\n  };\n\n  InlineSVG.prototype.processSVG = function () {\n    var content = this.state.content;\n    var preProcessor = this.props.preProcessor;\n\n    if (preProcessor) {\n      return preProcessor(content);\n    }\n\n    return content;\n  };\n\n  InlineSVG.prototype.updateSVGAttributes = function (node) {\n    var _this = this;\n\n    var _a = this.props,\n        _b = _a.baseURL,\n        baseURL = _b === void 0 ? '' : _b,\n        uniquifyIDs = _a.uniquifyIDs;\n    var replaceableAttributes = ['id', 'href', 'xlink:href', 'xlink:role', 'xlink:arcrole'];\n    var linkAttributes = ['href', 'xlink:href'];\n\n    var isDataValue = function isDataValue(name, value) {\n      return linkAttributes.indexOf(name) >= 0 && (value ? value.indexOf('#') < 0 : false);\n    };\n\n    if (!uniquifyIDs) {\n      return node;\n    }\n\n    __spreadArray([], __read(node.children)).map(function (d) {\n      if (d.attributes && d.attributes.length) {\n        var attributes_1 = Object.values(d.attributes).map(function (a) {\n          var attr = a;\n          var match = a.value.match(/url\\((.*?)\\)/);\n\n          if (match && match[1]) {\n            attr.value = a.value.replace(match[0], \"url(\" + baseURL + match[1] + \"__\" + _this.hash + \")\");\n          }\n\n          return attr;\n        });\n        replaceableAttributes.forEach(function (r) {\n          var attribute = attributes_1.find(function (a) {\n            return a.name === r;\n          });\n\n          if (attribute && !isDataValue(r, attribute.value)) {\n            attribute.value = attribute.value + \"__\" + _this.hash;\n          }\n        });\n      }\n\n      if (d.children.length) {\n        return _this.updateSVGAttributes(d);\n      }\n\n      return d;\n    });\n\n    return node;\n  };\n\n  InlineSVG.prototype.getNode = function () {\n    var _a = this.props,\n        description = _a.description,\n        title = _a.title;\n\n    try {\n      var svgText = this.processSVG();\n      var node = convert(svgText, {\n        nodeOnly: true\n      });\n\n      if (!node || !(node instanceof SVGSVGElement)) {\n        throw new Error('Could not convert the src to a DOM Node');\n      }\n\n      var svg = this.updateSVGAttributes(node);\n\n      if (description) {\n        var originalDesc = svg.querySelector('desc');\n\n        if (originalDesc && originalDesc.parentNode) {\n          originalDesc.parentNode.removeChild(originalDesc);\n        }\n\n        var descElement = document.createElement('desc');\n        descElement.innerHTML = description;\n        svg.prepend(descElement);\n      }\n\n      if (title) {\n        var originalTitle = svg.querySelector('title');\n\n        if (originalTitle && originalTitle.parentNode) {\n          originalTitle.parentNode.removeChild(originalTitle);\n        }\n\n        var titleElement = document.createElement('title');\n        titleElement.innerHTML = title;\n        svg.prepend(titleElement);\n      }\n\n      return svg;\n    } catch (error) {\n      return this.handleError(error);\n    }\n  };\n\n  InlineSVG.prototype.getElement = function () {\n    try {\n      var node = this.getNode();\n      var element = convert(node);\n\n      if (!element || !React.isValidElement(element)) {\n        throw new Error('Could not convert the src to a React element');\n      }\n\n      this.setState({\n        element: element,\n        status: STATUS.READY\n      });\n    } catch (error) {\n      this.handleError(new Error(error.message));\n    }\n  };\n\n  InlineSVG.prototype.load = function () {\n    var _this = this;\n    /* istanbul ignore else */\n\n\n    if (this.isActive) {\n      this.setState({\n        content: '',\n        element: null,\n        status: STATUS.LOADING\n      }, function () {\n        var _a = _this.props,\n            cacheRequests = _a.cacheRequests,\n            src = _a.src;\n        var cache = cacheRequests && cacheStore[src];\n\n        if (cache) {\n          /* istanbul ignore else */\n          if (cache.status === STATUS.LOADING) {\n            cache.queue.push(_this.handleCacheQueue);\n          } else if (cache.status === STATUS.LOADED) {\n            _this.handleLoad(cache.content);\n          }\n\n          return;\n        }\n\n        var dataURI = src.match(/data:image\\/svg[^,]*?(;base64)?,(.*)/);\n        var inlineSrc;\n\n        if (dataURI) {\n          inlineSrc = dataURI[1] ? atob(dataURI[2]) : decodeURIComponent(dataURI[2]);\n        } else if (src.indexOf('<svg') >= 0) {\n          inlineSrc = src;\n        }\n\n        if (inlineSrc) {\n          _this.handleLoad(inlineSrc);\n\n          return;\n        }\n\n        _this.request();\n      });\n    }\n  };\n\n  InlineSVG.prototype.render = function () {\n    var _a = this.state,\n        element = _a.element,\n        status = _a.status;\n    var _b = this.props,\n        _c = _b.children,\n        children = _c === void 0 ? null : _c,\n        innerRef = _b.innerRef,\n        _d = _b.loader,\n        loader = _d === void 0 ? null : _d;\n    var elementProps = removeProperties(this.props, 'baseURL', 'cacheRequests', 'children', 'description', 'fetchOptions', 'innerRef', 'loader', 'onError', 'onLoad', 'preProcessor', 'src', 'title', 'uniqueHash', 'uniquifyIDs');\n\n    if (!canUseDOM()) {\n      return loader;\n    }\n\n    if (element) {\n      return React.cloneElement(element, __assign({\n        ref: innerRef\n      }, elementProps));\n    }\n\n    if ([STATUS.UNSUPPORTED, STATUS.FAILED].indexOf(status) > -1) {\n      return children;\n    }\n\n    return loader;\n  };\n\n  InlineSVG.defaultProps = {\n    cacheRequests: true,\n    uniquifyIDs: false\n  };\n  return InlineSVG;\n}(React.PureComponent);\n\nexport default InlineSVG;\nexport * from './types';","map":{"version":3,"mappings":"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","names":["React","convert","STATUS","canUseDOM","isSupportedEnvironment","randomString","removeProperties","cacheStore","Object","create","__extends","props","_super","_this","content","handleLoad","handleError","isActive","setState","status","LOADED","getElement","error","onError","message","UNSUPPORTED","FAILED","cacheRequests","fetchOptions","src","LOADING","queue","fetch","then","response","contentType","headers","get","split","fileType","Error","some","d","indexOf","text","currentSrc","cache","filter","cb","catch","forEach","state","element","hasCache","PENDING","hash","uniqueHash","InlineSVG","load","prevProps","prevState","onLoad","READY","preProcessor","node","_b","baseURL","uniquifyIDs","replaceableAttributes","linkAttributes","isDataValue","name","value","__spreadArray","children","map","attributes","length","attributes_1","values","a","attr","match","replace","r","attribute","find","updateSVGAttributes","description","title","svgText","processSVG","nodeOnly","SVGSVGElement","svg","originalDesc","querySelector","parentNode","removeChild","descElement","document","createElement","innerHTML","prepend","originalTitle","titleElement","getNode","isValidElement","push","handleCacheQueue","dataURI","inlineSrc","atob","decodeURIComponent","request","_c","innerRef","_d","loader","elementProps","cloneElement","__assign","ref","PureComponent"],"sources":["C:\\laragon\\www\\monday\\quickstart-react\\node_modules\\monday-ui-react-core\\node_modules\\react-inlinesvg\\src\\index.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport convert from 'react-from-dom';\n\nimport {\n  STATUS,\n  canUseDOM,\n  isSupportedEnvironment,\n  randomString,\n  removeProperties,\n} from './helpers';\nimport { FetchError, Props, State, StorageItem } from './types';\n\nexport const cacheStore: { [key: string]: StorageItem } = Object.create(null);\n\nexport default class InlineSVG extends React.PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      content: '',\n      element: null,\n      hasCache: !!props.cacheRequests && !!cacheStore[props.src],\n      status: STATUS.PENDING,\n    };\n\n    this.hash = props.uniqueHash || randomString(8);\n  }\n\n  private isActive = false;\n  private readonly hash: string;\n\n  public static defaultProps = {\n    cacheRequests: true,\n    uniquifyIDs: false,\n  };\n\n  public componentDidMount(): void {\n    this.isActive = true;\n\n    if (!canUseDOM()) {\n      return;\n    }\n\n    const { status } = this.state;\n    const { src } = this.props;\n\n    try {\n      /* istanbul ignore else */\n      if (status === STATUS.PENDING) {\n        /* istanbul ignore else */\n        if (!isSupportedEnvironment()) {\n          throw new Error('Browser does not support SVG');\n        }\n\n        /* istanbul ignore else */\n        if (!src) {\n          throw new Error('Missing src');\n        }\n\n        this.load();\n      }\n    } catch (error) {\n      this.handleError(error);\n    }\n  }\n\n  public componentDidUpdate(prevProps: Props, prevState: State): void {\n    if (!canUseDOM()) {\n      return;\n    }\n\n    const { hasCache, status } = this.state;\n    const { onLoad, src } = this.props;\n\n    if (prevState.status !== STATUS.READY && status === STATUS.READY) {\n      /* istanbul ignore else */\n      if (onLoad) {\n        onLoad(src, hasCache);\n      }\n    }\n\n    if (prevProps.src !== src) {\n      if (!src) {\n        this.handleError(new Error('Missing src'));\n        return;\n      }\n\n      this.load();\n    }\n  }\n\n  public componentWillUnmount(): void {\n    this.isActive = false;\n  }\n\n  private processSVG() {\n    const { content } = this.state;\n    const { preProcessor } = this.props;\n\n    if (preProcessor) {\n      return preProcessor(content);\n    }\n\n    return content;\n  }\n\n  private updateSVGAttributes(node: SVGSVGElement): SVGSVGElement {\n    const { baseURL = '', uniquifyIDs } = this.props;\n    const replaceableAttributes = ['id', 'href', 'xlink:href', 'xlink:role', 'xlink:arcrole'];\n    const linkAttributes = ['href', 'xlink:href'];\n    const isDataValue = (name: string, value: string) =>\n      linkAttributes.indexOf(name) >= 0 && (value ? value.indexOf('#') < 0 : false);\n\n    if (!uniquifyIDs) {\n      return node;\n    }\n\n    [...node.children].map((d) => {\n      if (d.attributes && d.attributes.length) {\n        const attributes = Object.values(d.attributes).map((a) => {\n          const attr = a;\n          const match = a.value.match(/url\\((.*?)\\)/);\n\n          if (match && match[1]) {\n            attr.value = a.value.replace(match[0], `url(${baseURL}${match[1]}__${this.hash})`);\n          }\n\n          return attr;\n        });\n\n        replaceableAttributes.forEach((r) => {\n          const attribute = attributes.find((a) => a.name === r);\n\n          if (attribute && !isDataValue(r, attribute.value)) {\n            attribute.value = `${attribute.value}__${this.hash}`;\n          }\n        });\n      }\n\n      if (d.children.length) {\n        return this.updateSVGAttributes(d as SVGSVGElement);\n      }\n\n      return d;\n    });\n\n    return node;\n  }\n\n  private getNode() {\n    const { description, title } = this.props;\n\n    try {\n      const svgText = this.processSVG();\n      const node = convert(svgText, { nodeOnly: true });\n\n      if (!node || !(node instanceof SVGSVGElement)) {\n        throw new Error('Could not convert the src to a DOM Node');\n      }\n\n      const svg = this.updateSVGAttributes(node);\n\n      if (description) {\n        const originalDesc = svg.querySelector('desc');\n\n        if (originalDesc && originalDesc.parentNode) {\n          originalDesc.parentNode.removeChild(originalDesc);\n        }\n\n        const descElement = document.createElement('desc');\n        descElement.innerHTML = description;\n        svg.prepend(descElement);\n      }\n\n      if (title) {\n        const originalTitle = svg.querySelector('title');\n\n        if (originalTitle && originalTitle.parentNode) {\n          originalTitle.parentNode.removeChild(originalTitle);\n        }\n\n        const titleElement = document.createElement('title');\n        titleElement.innerHTML = title;\n        svg.prepend(titleElement);\n      }\n\n      return svg;\n    } catch (error) {\n      return this.handleError(error);\n    }\n  }\n\n  private getElement() {\n    try {\n      const node = this.getNode() as Node;\n      const element = convert(node);\n\n      if (!element || !React.isValidElement(element)) {\n        throw new Error('Could not convert the src to a React element');\n      }\n\n      this.setState({\n        element,\n        status: STATUS.READY,\n      });\n    } catch (error) {\n      this.handleError(new Error(error.message));\n    }\n  }\n\n  private load() {\n    /* istanbul ignore else */\n    if (this.isActive) {\n      this.setState(\n        {\n          content: '',\n          element: null,\n          status: STATUS.LOADING,\n        },\n        () => {\n          const { cacheRequests, src } = this.props;\n          const cache = cacheRequests && cacheStore[src];\n          if (cache) {\n            /* istanbul ignore else */\n            if (cache.status === STATUS.LOADING) {\n              cache.queue.push(this.handleCacheQueue);\n            } else if (cache.status === STATUS.LOADED) {\n              this.handleLoad(cache.content);\n            }\n            return;\n          }\n\n          const dataURI = src.match(/data:image\\/svg[^,]*?(;base64)?,(.*)/);\n          let inlineSrc;\n\n          if (dataURI) {\n            inlineSrc = dataURI[1] ? atob(dataURI[2]) : decodeURIComponent(dataURI[2]);\n          } else if (src.indexOf('<svg') >= 0) {\n            inlineSrc = src;\n          }\n\n          if (inlineSrc) {\n            this.handleLoad(inlineSrc);\n            return;\n          }\n\n          this.request();\n        },\n      );\n    }\n  }\n\n  private handleCacheQueue = (content: string | Error) => {\n    /* istanbul ignore else */\n    if (typeof content === 'string') {\n      this.handleLoad(content);\n      return;\n    }\n\n    this.handleError(content);\n  };\n\n  private handleLoad = (content: string) => {\n    /* istanbul ignore else */\n    if (this.isActive) {\n      this.setState(\n        {\n          content,\n          status: STATUS.LOADED,\n        },\n        this.getElement,\n      );\n    }\n  };\n\n  private handleError = (error: Error | FetchError) => {\n    const { onError } = this.props;\n    const status =\n      error.message === 'Browser does not support SVG' ? STATUS.UNSUPPORTED : STATUS.FAILED;\n\n    /* istanbul ignore else */\n    if (this.isActive) {\n      this.setState({ status }, () => {\n        /* istanbul ignore else */\n        if (typeof onError === 'function') {\n          onError(error);\n        }\n      });\n    }\n  };\n\n  private request = () => {\n    const { cacheRequests, fetchOptions, src } = this.props;\n\n    try {\n      if (cacheRequests) {\n        cacheStore[src] = { content: '', status: STATUS.LOADING, queue: [] };\n      }\n\n      return fetch(src, fetchOptions)\n        .then((response) => {\n          const contentType = response.headers.get('content-type');\n          const [fileType] = (contentType || '').split(/ ?; ?/);\n\n          if (response.status > 299) {\n            throw new Error('Not found');\n          }\n\n          if (!['image/svg+xml', 'text/plain'].some((d) => fileType.indexOf(d) >= 0)) {\n            throw new Error(`Content type isn't valid: ${fileType}`);\n          }\n\n          return response.text();\n        })\n        .then((content) => {\n          const { src: currentSrc } = this.props;\n\n          // the current src don't match the previous one, skipping...\n          if (src !== currentSrc) {\n            return;\n          }\n\n          this.handleLoad(content);\n\n          /* istanbul ignore else */\n          if (cacheRequests) {\n            const cache = cacheStore[src];\n\n            /* istanbul ignore else */\n            if (cache) {\n              cache.content = content;\n              cache.status = STATUS.LOADED;\n\n              cache.queue = cache.queue.filter((cb) => {\n                cb(content);\n\n                return false;\n              });\n            }\n          }\n        })\n        .catch((error) => {\n          this.handleError(error);\n\n          /* istanbul ignore else */\n          if (cacheRequests) {\n            const cache = cacheStore[src];\n\n            /* istanbul ignore else */\n            if (cache) {\n              cache.queue.forEach((cb: (content: string) => void) => {\n                cb(error);\n              });\n\n              delete cacheStore[src];\n            }\n          }\n        });\n    } catch (error) {\n      return this.handleError(new Error(error.message));\n    }\n  };\n\n  public render(): React.ReactNode {\n    const { element, status } = this.state;\n    const { children = null, innerRef, loader = null } = this.props;\n    const elementProps = removeProperties(\n      this.props,\n      'baseURL',\n      'cacheRequests',\n      'children',\n      'description',\n      'fetchOptions',\n      'innerRef',\n      'loader',\n      'onError',\n      'onLoad',\n      'preProcessor',\n      'src',\n      'title',\n      'uniqueHash',\n      'uniquifyIDs',\n    );\n\n    if (!canUseDOM()) {\n      return loader;\n    }\n\n    if (element) {\n      return React.cloneElement(element as React.ReactElement, { ref: innerRef, ...elementProps });\n    }\n\n    if ([STATUS.UNSUPPORTED, STATUS.FAILED].indexOf(status) > -1) {\n      return children;\n    }\n\n    return loader;\n  }\n}\n\nexport * from './types';\n"]},"metadata":{},"sourceType":"module"}